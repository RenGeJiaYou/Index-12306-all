<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.sjj</groupId>
    <artifactId>dependencies</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>


    <name>dependencies</name>
    <description>dependencies 并非 index-12306-all 的子模块,而是专门用来存储依赖的</description>
    <properties>
        <java.version>17</java.version>
        <spring-boot.version>3.1.0</spring-boot.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- `spring-boot-dependencies` 是一个 Maven POM 文件，它定义了 Spring Boot 项目中所有依赖的版本。
            这个 POM 文件包含了 Spring Boot 支持的所有库的版本，这样你就不需要在你的项目中指定这些库的版本了。
            当你在你的 Maven 项目中引入 `spring-boot-dependencies`，Maven 会自动处理版本管理，确保所有的库都是相互兼容的。
            这样可以避免版本冲突，使得项目更加稳定。-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>3.0.2</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

</project>
